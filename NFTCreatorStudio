import pandas as pd
import matplotlib.pyplot as plt
from web3 import Web3
import json
import requests
from PIL import Image
from io import BytesIO

class NFTCreatorStudio:
    def __init__(self, infura_url: str, contract_address: str, abi_file: str):
        self.web3 = Web3(Web3.HTTPProvider(infura_url))
        self.contract_address = Web3.toChecksumAddress(contract_address)
        with open(abi_file, 'r') as file:
            self.abi = json.load(file)
        self.contract = self.web3.eth.contract(address=self.contract_address, abi=self.abi)

    def create_nft(self, owner_address: str, token_id: int, metadata: dict) -> str:
        """
        Create an NFT with the given metadata.
        """
        metadata_json = json.dumps(metadata)
        transaction = self.contract.functions.createNFT(
            owner_address,
            token_id,
            metadata_json
        ).buildTransaction({'chainId': 1, 'gas': 2000000, 'gasPrice': self.web3.toWei('20', 'gwei')})
        return transaction

    def send_transaction(self, transaction: dict, private_key: str) -> str:
        """
        Send a transaction to the blockchain.
        """
        signed_txn = self.web3.eth.account.signTransaction(transaction, private_key=private_key)
        tx_hash = self.web3.eth.sendRawTransaction(signed_txn.rawTransaction)
        return self.web3.toHex(tx_hash)

    def get_nft_metadata(self, token_id: int) -> dict:
        """
        Get metadata for a specific NFT.
        """
        metadata_json = self.contract.functions.getNFTMetadata(token_id).call()
        return json.loads(metadata_json)

    def visualize_nft(self, token_id: int):
        """
        Visualize the NFT by fetching its image from the metadata URL.
        """
        metadata = self.get_nft_metadata(token_id)
        image_url = metadata.get('image')
        if image_url:
            response = requests.get(image_url)
            img = Image.open(BytesIO(response.content))
            plt.figure(figsize=(8, 8))
            plt.imshow(img)
            plt.axis('off')
            plt.title(f'NFT #{token_id}')
            plt.show()
        else:
            print("No image URL found in metadata.")

# Example usage
if __name__ == "__main__":
    infura_url = 'https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID'
    contract_address = '0xYourContractAddressHere'
    abi_file = 'nft_abi.json'
    
    nft_studio = NFTCreatorStudio(infura_url, contract_address, abi_file)

    # Example NFT metadata
    metadata = {
        'name': 'Unique NFT',
        'description': 'This is a unique NFT.',
        'image': 'https://example.com/path/to/image.png'
    }
    
    owner_address = '0xOwnerAddressHere'
    token_id = 1
    private_key = 'your_private_key_here'

    # Create and send NFT transaction
    transaction = nft_studio.create_nft(owner_address, token_id, metadata)
    tx_hash = nft_studio.send_transaction(transaction, private_key)
    print(f"NFT creation transaction hash: {tx_hash}")

    # Visualize NFT
    nft_studio.visualize_nft(token_id)
